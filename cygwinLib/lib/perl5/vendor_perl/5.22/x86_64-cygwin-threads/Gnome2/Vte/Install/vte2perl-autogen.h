/* This file is automatically generated. Any changes made here will be lost. */

/* This header defines simple perlapi-ish macros for creating SV wrappers
 * and extracting the GPerl value from SV wrappers.  These macros are used
 * by the autogenerated typemaps, and are defined here so that you can use
 * the same logic anywhere in your code (e.g., if you handle the argument
 * stack by hand instead of using the typemap). */

#ifdef VTE_TYPE_TERMINAL
  /* GtkObject derivative VteTerminal */
# define SvVteTerminal(sv)	((VteTerminal*)gperl_get_object_check (sv, VTE_TYPE_TERMINAL))
# define newSVVteTerminal(val)	(gtk2perl_new_gtkobject (GTK_OBJECT (val)))
  typedef VteTerminal VteTerminal_ornull;
# define SvVteTerminal_ornull(sv)	(gperl_sv_is_defined (sv) ? SvVteTerminal(sv) : NULL)
# define newSVVteTerminal_ornull(val)	(((val) == NULL) ? &PL_sv_undef : gtk2perl_new_gtkobject (GTK_OBJECT (val)))
#endif /* VTE_TYPE_TERMINAL */

#ifdef VTE_TYPE_TERMINAL_ANTI_ALIAS
  /* GEnum VteTerminalAntiAlias */
# define SvVteTerminalAntiAlias(sv)	((VteTerminalAntiAlias)gperl_convert_enum (VTE_TYPE_TERMINAL_ANTI_ALIAS, sv))
# define newSVVteTerminalAntiAlias(val)	(gperl_convert_back_enum (VTE_TYPE_TERMINAL_ANTI_ALIAS, val))
#endif /* VTE_TYPE_TERMINAL_ANTI_ALIAS */

#ifdef VTE_TYPE_TERMINAL_ERASE_BINDING
  /* GEnum VteTerminalEraseBinding */
# define SvVteTerminalEraseBinding(sv)	((VteTerminalEraseBinding)gperl_convert_enum (VTE_TYPE_TERMINAL_ERASE_BINDING, sv))
# define newSVVteTerminalEraseBinding(val)	(gperl_convert_back_enum (VTE_TYPE_TERMINAL_ERASE_BINDING, val))
#endif /* VTE_TYPE_TERMINAL_ERASE_BINDING */
