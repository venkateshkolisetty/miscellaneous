=head1 NAME

Gtk2::SourceView2::View

=cut

=head1 HIERARCHY

  Glib::Object
  +----Glib::InitiallyUnowned
       +----Gtk2::Object
            +----Gtk2::Widget
                 +----Gtk2::Container
                      +----Gtk2::TextView
                           +----Gtk2::SourceView2::View



=cut

=head1 INTERFACES

  Glib::Object::_Unregistered::AtkImplementorIface
  Gtk2::Buildable



=cut


=head1 METHODS

=head2 widget = Gtk2::SourceView2::View-E<gt>B<new> 

=head2 widget = Gtk2::SourceView2::View-E<gt>B<new_with_buffer> ($buffer)

=over

=item * $buffer (Gtk2::SourceView2::Buffer) 

=back

=head2 boolean = $view-E<gt>B<get_auto_indent> 

=head2 $view-E<gt>B<set_auto_indent> ($enable)

=over

=item * $enable (boolean) 

=back

=head2 drawspacesflags = $view-E<gt>B<get_draw_spaces> 

=head2 $view-E<gt>B<set_draw_spaces> ($flags)

=over

=item * $flags (Gtk2::SourceView2::DrawSpacesFlags) 

=back

=head2 boolean = $view-E<gt>B<get_highlight_current_line> 

=head2 $view-E<gt>B<set_highlight_current_line> ($show)

=over

=item * $show (boolean) 

=back

=head2 boolean = $view-E<gt>B<get_indent_on_tab> 

=head2 $view-E<gt>B<set_indent_on_tab> ($enable)

=over

=item * $enable (boolean) 

=back

=head2 integer = $view-E<gt>B<get_indent_width> 

=head2 $view-E<gt>B<set_indent_width> ($width)

=over

=item * $width (integer) 

=back

=head2 boolean = $view-E<gt>B<get_insert_spaces_instead_of_tabs> 

=head2 $view-E<gt>B<set_insert_spaces_instead_of_tabs> ($enable)

=over

=item * $enable (boolean) 

=back

=head2 color = $view-E<gt>B<get_mark_category_background> ($category)

=over

=item * $category (string) 

=back

=head2 $view-E<gt>B<set_mark_category_background> ($category, $color)

=over

=item * $category (string) 

=item * $color (Gtk2::Gdk::Color or undef) 

=back

=head2 pixbuf or undef = $view-E<gt>B<get_mark_category_pixbuf> ($category)

=over

=item * $category (string) 

=back

=head2 $view-E<gt>B<set_mark_category_pixbuf> ($category, $pixbuf)

=over

=item * $category (string) 

=item * $pixbuf (Gtk2::Gdk::Pixbuf or undef) 

=back

=head2 integer = $view-E<gt>B<get_mark_category_priority> ($category)

=over

=item * $category (string) 

=back

=head2 $view-E<gt>B<set_mark_category_priority> ($category, $priority)

=over

=item * $category (string) 

=item * $priority (integer) 

=back

=head2 integer = $view-E<gt>B<get_right_margin_position> 

=head2 $view-E<gt>B<set_right_margin_position> ($pos)

=over

=item * $pos (integer) 

=back

=head2 boolean = $view-E<gt>B<get_show_line_marks> 

=head2 $view-E<gt>B<set_show_line_marks> ($show)

=over

=item * $show (boolean) 

=back

=head2 boolean = $view-E<gt>B<get_show_line_numbers> 

=head2 $view-E<gt>B<set_show_line_numbers> ($show)

=over

=item * $show (boolean) 

=back

=head2 boolean = $view-E<gt>B<get_show_right_margin> 

=head2 $view-E<gt>B<set_show_right_margin> ($show)

=over

=item * $show (boolean) 

=back

=head2 smarthomeendtype = $view-E<gt>B<get_smart_home_end> 

=head2 $view-E<gt>B<set_smart_home_end> ($smart_he)

=over

=item * $smart_he (Gtk2::SourceView2::SmartHomeEndType) 

=back

=head2 integer = $view-E<gt>B<get_tab_width> 

=head2 $view-E<gt>B<set_tab_width> ($width)

=over

=item * $width (integer) 

=back



=cut


=head1 PROPERTIES

=over

=item 'auto-indent' (boolean : default false : readable / writable)

Whether to enable auto indentation

=item 'completion' (Glib::Object::_Unregistered::GtkSourceCompletion : default undef : readable)

The completion object associated with the view

=item 'draw-spaces' (Gtk2::SourceView2::DrawSpacesFlags : default  : readable / writable)

Set if and how the spaces should be visualized

=item 'highlight-current-line' (boolean : default false : readable / writable)

Whether to highlight the current line

=item 'indent-on-tab' (boolean : default true : readable / writable)

Whether to indent the selected text when the tab key is pressed

=item 'indent-width' (integer : default -1 : readable / writable)

Number of spaces to use for each step of indent

=item 'insert-spaces-instead-of-tabs' (boolean : default false : readable / writable)

Whether to insert spaces instead of tabs

=item 'right-margin-position' (Glib::UInt : default 80 : readable / writable)

Position of the right margin

=item 'show-line-marks' (boolean : default false : readable / writable)

Whether to display line mark pixbufs

=item 'show-line-numbers' (boolean : default false : readable / writable)

Whether to display line numbers

=item 'show-right-margin' (boolean : default false : readable / writable)

Whether to display the right margin

=item 'smart-home-end' (Gtk2::SourceView2::SmartHomeEndType : default "disabled" : readable / writable)

HOME and END keys move to first/last non whitespace characters on line before going to the start/end of the line

=item 'tab-width' (Glib::UInt : default 8 : readable / writable)

Width of a tab character expressed in spaces

=back



=cut


=head1 SIGNALS

=over

=item B<undo> (Gtk2::SourceView2::View)

=item B<redo> (Gtk2::SourceView2::View)

=item B<show-completion> (Gtk2::SourceView2::View)

=item B<line-mark-activated> (Gtk2::SourceView2::View, Gtk2::TextIter, Gtk2::Gdk::Event)

=item B<move-lines> (Gtk2::SourceView2::View, boolean, integer)

=back



=cut


=head1 ENUMS AND FLAGS

=head2 flags Gtk2::SourceView2::DrawSpacesFlags

=over

=item * 'space' / 'GTK_SOURCE_DRAW_SPACES_SPACE'

=item * 'tab' / 'GTK_SOURCE_DRAW_SPACES_TAB'

=item * 'newline' / 'GTK_SOURCE_DRAW_SPACES_NEWLINE'

=item * 'nbsp' / 'GTK_SOURCE_DRAW_SPACES_NBSP'

=item * 'leading' / 'GTK_SOURCE_DRAW_SPACES_LEADING'

=item * 'text' / 'GTK_SOURCE_DRAW_SPACES_TEXT'

=item * 'trailing' / 'GTK_SOURCE_DRAW_SPACES_TRAILING'

=item * 'all' / 'GTK_SOURCE_DRAW_SPACES_ALL'

=back


=head2 enum Gtk2::SourceView2::SmartHomeEndType

=over

=item * 'disabled' / 'GTK_SOURCE_SMART_HOME_END_DISABLED'

=item * 'before' / 'GTK_SOURCE_SMART_HOME_END_BEFORE'

=item * 'after' / 'GTK_SOURCE_SMART_HOME_END_AFTER'

=item * 'always' / 'GTK_SOURCE_SMART_HOME_END_ALWAYS'

=back




=cut


=head1 SEE ALSO

L<Gtk2::SourceView2>, L<Glib::Object>, L<Glib::InitiallyUnowned>, L<Gtk2::Object>, L<Gtk2::Widget>, L<Gtk2::Container>, L<Gtk2::TextView>


=cut


=head1 COPYRIGHT

Copyright (C) 2009 by Emmanuel Rodriguez


=cut

