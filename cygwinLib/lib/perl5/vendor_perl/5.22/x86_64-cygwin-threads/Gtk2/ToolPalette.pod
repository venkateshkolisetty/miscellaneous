=head1 NAME

Gtk2::ToolPalette

=cut

=head1 HIERARCHY

  Glib::Object
  +----Glib::InitiallyUnowned
       +----Gtk2::Object
            +----Gtk2::Widget
                 +----Gtk2::Container
                      +----Gtk2::ToolPalette



=cut

=head1 INTERFACES

  Glib::Object::_Unregistered::AtkImplementorIface
  Gtk2::Buildable
  Gtk2::Orientable



=cut


=head1 METHODS

=head2 widget = Gtk2::ToolPalette-E<gt>B<new> 

=head2 $palette-E<gt>B<add_drag_dest> ($widget, $flags, $targets, $actions)

=over

=item * $widget (Gtk2::Widget) 

=item * $flags (Gtk2::DestDefaults) 

=item * $targets (Gtk2::ToolPaletteDragTargets) 

=item * $actions (Gtk2::Gdk::DragAction) 

=back

=head2 widget = $palette-E<gt>B<get_drag_item> ($selection)

=over

=item * $selection (Gtk2::SelectionData) 

=back

=head2 $palette-E<gt>B<set_drag_source> ($targets)

=over

=item * $targets (Gtk2::ToolPaletteDragTargets) 

=back

=head2 targetentry = Gtk2::ToolPalette-E<gt>B<get_drag_target_group> 

=head2 targetentry = Gtk2::ToolPalette-E<gt>B<get_drag_target_item> 

=head2 toolitemgroup or undef = $palette-E<gt>B<get_drop_group> ($x, $y)

=over

=item * $x (integer) 

=item * $y (integer) 

=back

=head2 toolitem or undef = $palette-E<gt>B<get_drop_item> ($x, $y)

=over

=item * $x (integer) 

=item * $y (integer) 

=back

=head2 boolean = $palette-E<gt>B<get_exclusive> ($group)

=over

=item * $group (Gtk2::ToolItemGroup) 

=back

=head2 $palette-E<gt>B<set_exclusive> ($group, $exclusive)

=over

=item * $group (Gtk2::ToolItemGroup) 

=item * $exclusive (boolean) 

=back

=head2 boolean = $palette-E<gt>B<get_expand> ($group)

=over

=item * $group (Gtk2::ToolItemGroup) 

=back

=head2 $palette-E<gt>B<set_expand> ($group, $expand)

=over

=item * $group (Gtk2::ToolItemGroup) 

=item * $expand (boolean) 

=back

=head2 integer = $palette-E<gt>B<get_group_position> ($group)

=over

=item * $group (Gtk2::ToolItemGroup) 

=back

=head2 $palette-E<gt>B<set_group_position> ($group, $position)

=over

=item * $group (Gtk2::ToolItemGroup) 

=item * $position (integer) 

=back

=head2 adjustment = $palette-E<gt>B<get_hadjustment> 

=head2 iconsize = $palette-E<gt>B<get_icon_size> 

=head2 $palette-E<gt>B<set_icon_size> ($icon_size)

=over

=item * $icon_size (Gtk2::IconSize) 

=back

=head2 toolbarstyle = $palette-E<gt>B<get_style> 

=head2 $palette-E<gt>B<set_style> ($style)

=over

=item * $style (Gtk2::ToolbarStyle) 

=back

=head2 $palette-E<gt>B<unset_icon_size> 

=head2 $palette-E<gt>B<unset_style> 

=head2 adjustment = $palette-E<gt>B<get_vadjustment> 



=cut


=head1 PROPERTIES

=over

=item 'icon-size' (Gtk2::IconSize : default "small-toolbar" : readable / writable / private)

Size of icons in this tool palette

=item 'icon-size-set' (boolean : default false : readable / writable / private)

Whether the icon-size property has been set

=item 'toolbar-style' (Gtk2::ToolbarStyle : default "icons" : readable / writable / private)

Style of items in the tool palette

=back



=cut


=head1 CHILD PROPERTIES

=over

=item 'exclusive' (boolean : default false : readable / writable / private)

Whether the item group should be the only expanded at a given time

=item 'expand' (boolean : default false : readable / writable / private)

Whether the item group should receive extra space when the palette grows

=back



=cut


=head1 SIGNALS

=over

=item B<set-scroll-adjustments> (Gtk2::ToolPalette, Gtk2::Adjustment, Gtk2::Adjustment)

=back



=cut


=head1 ENUMS AND FLAGS

=head2 flags Gtk2::DestDefaults

=over

=item * 'motion' / 'GTK_DEST_DEFAULT_MOTION'

=item * 'highlight' / 'GTK_DEST_DEFAULT_HIGHLIGHT'

=item * 'drop' / 'GTK_DEST_DEFAULT_DROP'

=item * 'all' / 'GTK_DEST_DEFAULT_ALL'

=back


=head2 flags Gtk2::Gdk::DragAction

=over

=item * 'default' / 'GDK_ACTION_DEFAULT'

=item * 'copy' / 'GDK_ACTION_COPY'

=item * 'move' / 'GDK_ACTION_MOVE'

=item * 'link' / 'GDK_ACTION_LINK'

=item * 'private' / 'GDK_ACTION_PRIVATE'

=item * 'ask' / 'GDK_ACTION_ASK'

=back


=head2 enum Gtk2::IconSize

=over

=item * 'invalid' / 'GTK_ICON_SIZE_INVALID'

=item * 'menu' / 'GTK_ICON_SIZE_MENU'

=item * 'small-toolbar' / 'GTK_ICON_SIZE_SMALL_TOOLBAR'

=item * 'large-toolbar' / 'GTK_ICON_SIZE_LARGE_TOOLBAR'

=item * 'button' / 'GTK_ICON_SIZE_BUTTON'

=item * 'dnd' / 'GTK_ICON_SIZE_DND'

=item * 'dialog' / 'GTK_ICON_SIZE_DIALOG'

=back


=head2 flags Gtk2::ToolPaletteDragTargets

=over

=item * 'items' / 'GTK_TOOL_PALETTE_DRAG_ITEMS'

=item * 'groups' / 'GTK_TOOL_PALETTE_DRAG_GROUPS'

=back


=head2 enum Gtk2::ToolbarStyle

=over

=item * 'icons' / 'GTK_TOOLBAR_ICONS'

=item * 'text' / 'GTK_TOOLBAR_TEXT'

=item * 'both' / 'GTK_TOOLBAR_BOTH'

=item * 'both-horiz' / 'GTK_TOOLBAR_BOTH_HORIZ'

=back




=cut


=head1 SEE ALSO

L<Gtk2>, L<Glib::Object>, L<Glib::InitiallyUnowned>, L<Gtk2::Object>, L<Gtk2::Widget>, L<Gtk2::Container>


=cut


=head1 COPYRIGHT

Copyright (C) 2003-2011 by the gtk2-perl team.

This software is licensed under the LGPL.  See L<Gtk2> for a full notice.



=cut

