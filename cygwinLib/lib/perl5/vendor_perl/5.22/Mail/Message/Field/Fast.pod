=encoding utf8

=head1 NAME

Mail::Message::Field::Fast - one line of a message header

=head1 INHERITANCE

 Mail::Message::Field::Fast
   is a Mail::Message::Field
   is a Mail::Reporter

=head1 SYNOPSIS

 See Mail::Message::Field

=head1 DESCRIPTION

This is the faster, but less flexible implementation of a header field.
The data is stored in an array, and some hacks are made to speeds
things up.  Be gentle with me, and consider that each message contains
many of these lines, so speed is very important here.

Extends L<"DESCRIPTION" in Mail::Message::Field|Mail::Message::Field/"DESCRIPTION">.
 
=head1 OVERLOADED

Extends L<"OVERLOADED" in Mail::Message::Field|Mail::Message::Field/"OVERLOADED">.
 
=over 4

=item overload: B<"">

Inherited, see L<Mail::Message::Field/"OVERLOADED">

=item overload: B<0+>

Inherited, see L<Mail::Message::Field/"OVERLOADED">

=item overload: B<<=>>

Inherited, see L<Mail::Message::Field/"OVERLOADED">

=item overload: B<bool>

Inherited, see L<Mail::Message::Field/"OVERLOADED">

=item overload: B<cmp>

Inherited, see L<Mail::Message::Field/"OVERLOADED">

=back

=head1 METHODS

Extends L<"METHODS" in Mail::Message::Field|Mail::Message::Field/"METHODS">.
 
=head2 Constructors

Extends L<"Constructors" in Mail::Message::Field|Mail::Message::Field/"Constructors">.
 
=over 4

=item $obj-E<gt>B<clone>()

Inherited, see L<Mail::Message::Field/"Constructors">

=item Mail::Message::Field::Fast-E<gt>B<new>($data)

The constructor of this object does not follow the usual practise within
the Mail::Box suite: it does not use the constructor
L<Mail::Reporter::new()|Mail::Reporter/"Constructors">.
Therefor it has no logging or tracing facilities.

The method can be used in one of the following ways:

=over 4

=item * B<new> LINE

Pass a LINE as it could be found in a file: a (possibly folded) line
which is terminated by a new-line.

=item * B<new> NAME, (BODY|OBJECTS), [ATTRIBUTES]

A set of values which shape the line.

=back

Create a new header field object.  Specify the whole LINE at once, and
it will be split-up for you.  I case you already have the parts of the
header line, you may specify them separately as NAME and BODY.

In case you specify a single OBJECT, or a reference to an array of
OBJECTS, these objects are processed to become suitable to fill a
field, usually by simple strification.  When you specify one or more
L<Mail::Address|Mail::Address> objects, these are transformed into a string using
their C<format> method.  You may also add one L<Mail::Message::Field|Mail::Message::Field>,
whose body is taken.  In case of an array, the elements are joined into
one string with a comma.

ATTRIBUTES can be exactly one string which may contain multiple attributes
at once, quoted and formatted as required in RFC2822.  As alternative,
list of key-value pairs can be used.  In this case, the values will get
quoted if needed and everything formatted as the protocol demands.

 -Option--Defined in     --Default
  log     Mail::Reporter   <disabled>
  trace   Mail::Reporter   <disabled>

=over 2

=item log => LEVEL

=item trace => LEVEL

=back

example: 

 my $mime = Mail::Message::Field->new(
  'Content-Type: text/plain; charset=US-ASCII');

 my $mime = Mail::Message::Field->new(
  'Content-Type' => 'text/plain; charset=US-ASCII');

 my $mime = Mail::Message::Field->new(
  'Content-Type' => 'text/plain', 'charset=US-ASCII');

 my $mime = Mail::Message::Field->new(
  'Content-Type' => 'text/plain', charset => 'Latin1');

 my $mime = Mail::Message::Field->new(
  To => Mail::Address->new('My', 'me@example.com');

 my $mime = Mail::Message::Field->new(
  Cc => [ Mail::Address->new('You', 'you@example.com')
        , Mail::Address->new('His', 'he@example.com')
        ]);

But in practice, you can simply call

 my $head = Mail::Message::Head->new;
 $head->add( 'Content-Type' => 'text/plain'
           , charset => 'utf8');

which implicitly calls this constructor (when needed).  You can specify
the same things for L<Mail::Message::Head::Complete::add()|Mail::Message::Head::Complete/"Access to the header"> as this
C<new> accepts.

=back

=head2 The field

Extends L<"The field" in Mail::Message::Field|Mail::Message::Field/"The field">.
 
=over 4

=item $obj-E<gt>B<isStructured>()

=item Mail::Message::Field::Fast-E<gt>B<isStructured>()

Inherited, see L<Mail::Message::Field/"The field">

=item $obj-E<gt>B<length>()

Inherited, see L<Mail::Message::Field/"The field">

=item $obj-E<gt>B<nrLines>()

Inherited, see L<Mail::Message::Field/"The field">

=item $obj-E<gt>B<print>( [$fh] )

Inherited, see L<Mail::Message::Field/"The field">

=item $obj-E<gt>B<size>()

Inherited, see L<Mail::Message::Field/"The field">

=item $obj-E<gt>B<string>( [$wrap] )

Inherited, see L<Mail::Message::Field/"The field">

=item $obj-E<gt>B<toDisclose>()

Inherited, see L<Mail::Message::Field/"The field">

=back

=head2 Access to the name

Extends L<"Access to the name" in Mail::Message::Field|Mail::Message::Field/"Access to the name">.
 
=over 4

=item $obj-E<gt>B<Name>()

Inherited, see L<Mail::Message::Field/"Access to the name">

=item $obj-E<gt>B<name>()

Inherited, see L<Mail::Message::Field/"Access to the name">

=item $obj-E<gt>B<wellformedName>( [STRING] )

Inherited, see L<Mail::Message::Field/"Access to the name">

=back

=head2 Access to the body

Extends L<"Access to the body" in Mail::Message::Field|Mail::Message::Field/"Access to the body">.
 
=over 4

=item $obj-E<gt>B<body>()

Inherited, see L<Mail::Message::Field/"Access to the body">

=item $obj-E<gt>B<folded>()

Inherited, see L<Mail::Message::Field/"Access to the body">

=item $obj-E<gt>B<foldedBody>( [$body] )

Inherited, see L<Mail::Message::Field/"Access to the body">

=item $obj-E<gt>B<stripCFWS>( [STRING] )

=item Mail::Message::Field::Fast-E<gt>B<stripCFWS>( [STRING] )

Inherited, see L<Mail::Message::Field/"Access to the body">

=item $obj-E<gt>B<unfoldedBody>( [$body, [$wrap]] )

Inherited, see L<Mail::Message::Field/"Access to the body">

=back

=head2 Access to the content

Extends L<"Access to the content" in Mail::Message::Field|Mail::Message::Field/"Access to the content">.
 
=over 4

=item $obj-E<gt>B<addresses>()

Inherited, see L<Mail::Message::Field/"Access to the content">

=item $obj-E<gt>B<attribute>( $name, [$value] )

Inherited, see L<Mail::Message::Field/"Access to the content">

=item $obj-E<gt>B<attributes>()

Inherited, see L<Mail::Message::Field/"Access to the content">

=item $obj-E<gt>B<comment>( [STRING] )

Inherited, see L<Mail::Message::Field/"Access to the content">

=item $obj-E<gt>B<study>()

Inherited, see L<Mail::Message::Field/"Access to the content">

=item $obj-E<gt>B<toDate>( [$time] )

=item Mail::Message::Field::Fast-E<gt>B<toDate>( [$time] )

Inherited, see L<Mail::Message::Field/"Access to the content">

=item $obj-E<gt>B<toInt>()

Inherited, see L<Mail::Message::Field/"Access to the content">

=back

=head2 Other methods

Extends L<"Other methods" in Mail::Message::Field|Mail::Message::Field/"Other methods">.
 
=over 4

=item $obj-E<gt>B<dateToTimestamp>(STRING)

=item Mail::Message::Field::Fast-E<gt>B<dateToTimestamp>(STRING)

Inherited, see L<Mail::Message::Field/"Other methods">

=back

=head2 Internals

Extends L<"Internals" in Mail::Message::Field|Mail::Message::Field/"Internals">.
 
=over 4

=item $obj-E<gt>B<consume>( $line | <$name,<$body|$objects>> )

Inherited, see L<Mail::Message::Field/"Internals">

=item $obj-E<gt>B<defaultWrapLength>( [$length] )

Inherited, see L<Mail::Message::Field/"Internals">

=item $obj-E<gt>B<fold>( $name, $body, [$maxchars] )

=item Mail::Message::Field::Fast-E<gt>B<fold>( $name, $body, [$maxchars] )

Inherited, see L<Mail::Message::Field/"Internals">

=item $obj-E<gt>B<setWrapLength>( [$length] )

Inherited, see L<Mail::Message::Field/"Internals">

=item $obj-E<gt>B<stringifyData>(STRING|ARRAY|$objects)

Inherited, see L<Mail::Message::Field/"Internals">

=item $obj-E<gt>B<unfold>(STRING)

Inherited, see L<Mail::Message::Field/"Internals">

=back

=head2 Error handling

Extends L<"Error handling" in Mail::Message::Field|Mail::Message::Field/"Error handling">.
 
=over 4

=item $obj-E<gt>B<AUTOLOAD>()

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<addReport>($object)

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<defaultTrace>( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )

=item Mail::Message::Field::Fast-E<gt>B<defaultTrace>( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<errors>()

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<log>( [$level, [$strings]] )

=item Mail::Message::Field::Fast-E<gt>B<log>( [$level, [$strings]] )

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<logPriority>($level)

=item Mail::Message::Field::Fast-E<gt>B<logPriority>($level)

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<logSettings>()

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<notImplemented>()

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<report>( [$level] )

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<reportAll>( [$level] )

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<trace>( [$level] )

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<warnings>()

Inherited, see L<Mail::Reporter/"Error handling">

=back

=head2 Cleanup

Extends L<"Cleanup" in Mail::Message::Field|Mail::Message::Field/"Cleanup">.
 
=over 4

=item $obj-E<gt>B<DESTROY>()

Inherited, see L<Mail::Reporter/"Cleanup">

=back

=head1 DETAILS

Extends L<"DETAILS" in Mail::Message::Field|Mail::Message::Field/"DETAILS">.
 
=head1 DIAGNOSTICS

=over 4

=item Warning: Field content is not numerical: $content

The numeric value of a field is requested (for instance the C<Lines> or
C<Content-Length> fields should be numerical), however the data contains
weird characters.

=item Warning: Illegal character in field name $name

A new field is being created which does contain characters not permitted
by the RFCs.  Using this field in messages may break other e-mail clients
or transfer agents, and therefore mutulate or extinguish your message.

=item Error: Package $package does not implement $method.

Fatal error: the specific package (or one of its superclasses) does not
implement this method where it should. This message means that some other
related classes do implement this method however the class at hand does
not.  Probably you should investigate this and probably inform the author
of the package.

=back

=head1 SEE ALSO

This module is part of Mail-Box distribution version 2.120,
built on September 21, 2016. Website: F<http://perl.overmeer.net/mailbox/>

=head1 LICENSE

Copyrights 2001-2016 by [Mark Overmeer]. For other contributors see ChangeLog.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See F<http://www.perl.com/perl/misc/Artistic.html>

