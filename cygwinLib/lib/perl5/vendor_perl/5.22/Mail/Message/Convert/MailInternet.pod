=encoding utf8

=head1 NAME

Mail::Message::Convert::MailInternet - translate Mail::Message to Mail::Internet vv

=head1 INHERITANCE

 Mail::Message::Convert::MailInternet
   is a Mail::Message::Convert
   is a Mail::Reporter

=head1 SYNOPSIS

 use Mail::Message::Convert::MailInternet;
 my $convert = Mail::Message::Convert::MailInternet->new;

 my Mail::Message  $msg    = Mail::Message->new;
 my Mail::Internet $intern = $convert->export($msg);

 my Mail::Internet $intern = Mail::Internet->new;
 my Mail::Message  $msg    = $convert->from($intern);

 use Mail::Box::Manager;
 my $mgr     = Mail::Box::Manager->new;
 my $folder  = $mgr->open(folder => 'Outbox');
 $folder->addMessage($intern);

=head1 DESCRIPTION

The L<Mail::Internet|Mail::Internet> class of messages is very popular for all
kinds of message applications written in Perl.  However, the
format was developed when e-mail messages where still small and
attachments where rare; Mail::Message is much more flexible in
this respect.

Extends L<"DESCRIPTION" in Mail::Message::Convert|Mail::Message::Convert/"DESCRIPTION">.
 
=head1 METHODS

Extends L<"METHODS" in Mail::Message::Convert|Mail::Message::Convert/"METHODS">.
 
=head2 Constructors

Extends L<"Constructors" in Mail::Message::Convert|Mail::Message::Convert/"Constructors">.
 
=over 4

=item Mail::Message::Convert::MailInternet-E<gt>B<new>(%options)

Inherited, see L<Mail::Message::Convert/"METHODS">

=back

=head2 Converting

Extends L<"Converting" in Mail::Message::Convert|Mail::Message::Convert/"Converting">.
 
=over 4

=item $obj-E<gt>B<export>($message, %options)

Returns a new message object based on the information from
a L<Mail::Message|Mail::Message> object.  The $message specified is an
instance of a Mail::Message.

example: 

 my $convert = Mail::Message::Convert::MailInternet->new;
 my Mail::Message  $msg   = Mail::Message->new;
 my Mail::Internet $copy  = $convert->export($msg);

=item $obj-E<gt>B<from>($object, %options)

Returns a new L<Mail::Message|Mail::Message> object based on the information
from a L<Mail::Internet|Mail::Internet> object. 

example: 

 my $convert = Mail::Message::Convert::MailInternet->new;
 my Mail::Internet $msg  = Mail::Internet->new;
 my Mail::Message  $copy = $convert->from($msg);

=item $obj-E<gt>B<selectedFields>($head)

Inherited, see L<Mail::Message::Convert/"Converting">

=back

=head2 Error handling

Extends L<"Error handling" in Mail::Message::Convert|Mail::Message::Convert/"Error handling">.
 
=over 4

=item $obj-E<gt>B<AUTOLOAD>()

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<addReport>($object)

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<defaultTrace>( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )

=item Mail::Message::Convert::MailInternet-E<gt>B<defaultTrace>( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<errors>()

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<log>( [$level, [$strings]] )

=item Mail::Message::Convert::MailInternet-E<gt>B<log>( [$level, [$strings]] )

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<logPriority>($level)

=item Mail::Message::Convert::MailInternet-E<gt>B<logPriority>($level)

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<logSettings>()

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<notImplemented>()

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<report>( [$level] )

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<reportAll>( [$level] )

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<trace>( [$level] )

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<warnings>()

Inherited, see L<Mail::Reporter/"Error handling">

=back

=head2 Cleanup

Extends L<"Cleanup" in Mail::Message::Convert|Mail::Message::Convert/"Cleanup">.
 
=over 4

=item $obj-E<gt>B<DESTROY>()

Inherited, see L<Mail::Reporter/"Cleanup">

=back

=head1 DIAGNOSTICS

=over 4

=item Error: Package $package does not implement $method.

Fatal error: the specific package (or one of its superclasses) does not
implement this method where it should. This message means that some other
related classes do implement this method however the class at hand does
not.  Probably you should investigate this and probably inform the author
of the package.

=back

=head1 SEE ALSO

This module is part of Mail-Box distribution version 2.120,
built on September 21, 2016. Website: F<http://perl.overmeer.net/mailbox/>

=head1 LICENSE

Copyrights 2001-2016 by [Mark Overmeer]. For other contributors see ChangeLog.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See F<http://www.perl.com/perl/misc/Artistic.html>

