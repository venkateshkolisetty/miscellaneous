=encoding utf8

=head1 NAME

Mail::Message::Convert::TextAutoformat - Reformat plain text messages

=head1 INHERITANCE

 Mail::Message::Convert::TextAutoformat
   is a Mail::Message::Convert
   is a Mail::Reporter

=head1 SYNOPSIS

 use Mail::Message::Convert::TextAutoformat;
 my $af = Mail::Message::Convert::TextAutoformat->new;

 my $beautified_body = $af->autoformatBody($body);

=head1 DESCRIPTION

Play trics with plain text, for instance bodies with type C<text/plain>
using Damian Conway's Text::Autoformat.

Extends L<"DESCRIPTION" in Mail::Message::Convert|Mail::Message::Convert/"DESCRIPTION">.
 
=head1 METHODS

Extends L<"METHODS" in Mail::Message::Convert|Mail::Message::Convert/"METHODS">.
 
=head2 Constructors

Extends L<"Constructors" in Mail::Message::Convert|Mail::Message::Convert/"Constructors">.
 
=over 4

=item Mail::Message::Convert::TextAutoformat-E<gt>B<new>(%options)

 -Option --Defined in            --Default
  fields   Mail::Message::Convert  <see description>
  log      Mail::Reporter          'WARNINGS'
  options                          { (all, 1) }
  trace    Mail::Reporter          'WARNINGS'

=over 2

=item fields => NAMES|ARRAY-OF-NAMES|REGEXS

=item log => LEVEL

=item options => HASH-REF

Options to pass to Text::Autoformat, when its C<autoformat> method
is called.

=item trace => LEVEL

=back

=back

=head2 Converting

Extends L<"Converting" in Mail::Message::Convert|Mail::Message::Convert/"Converting">.
 
=over 4

=item $obj-E<gt>B<autoformatBody>($body)

Formats a single message body (a L<Mail::Message::Body|Mail::Message::Body> object)
into a new body object using Text::Autoformat.  If the
Text::Autoformat is not installed, C<undef> is returned.

=item $obj-E<gt>B<selectedFields>($head)

Inherited, see L<Mail::Message::Convert/"Converting">

=back

=head2 Error handling

Extends L<"Error handling" in Mail::Message::Convert|Mail::Message::Convert/"Error handling">.
 
=over 4

=item $obj-E<gt>B<AUTOLOAD>()

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<addReport>($object)

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<defaultTrace>( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )

=item Mail::Message::Convert::TextAutoformat-E<gt>B<defaultTrace>( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<errors>()

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<log>( [$level, [$strings]] )

=item Mail::Message::Convert::TextAutoformat-E<gt>B<log>( [$level, [$strings]] )

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<logPriority>($level)

=item Mail::Message::Convert::TextAutoformat-E<gt>B<logPriority>($level)

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<logSettings>()

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<notImplemented>()

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<report>( [$level] )

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<reportAll>( [$level] )

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<trace>( [$level] )

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<warnings>()

Inherited, see L<Mail::Reporter/"Error handling">

=back

=head2 Cleanup

Extends L<"Cleanup" in Mail::Message::Convert|Mail::Message::Convert/"Cleanup">.
 
=over 4

=item $obj-E<gt>B<DESTROY>()

Inherited, see L<Mail::Reporter/"Cleanup">

=back

=head1 DIAGNOSTICS

=over 4

=item Error: Package $package does not implement $method.

Fatal error: the specific package (or one of its superclasses) does not
implement this method where it should. This message means that some other
related classes do implement this method however the class at hand does
not.  Probably you should investigate this and probably inform the author
of the package.

=back

=head1 SEE ALSO

This module is part of Mail-Box distribution version 2.120,
built on September 21, 2016. Website: F<http://perl.overmeer.net/mailbox/>

=head1 LICENSE

Copyrights 2001-2016 by [Mark Overmeer]. For other contributors see ChangeLog.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See F<http://www.perl.com/perl/misc/Artistic.html>

