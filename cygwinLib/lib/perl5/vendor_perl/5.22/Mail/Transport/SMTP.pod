=encoding utf8

=head1 NAME

Mail::Transport::SMTP - transmit messages without external program

=head1 INHERITANCE

 Mail::Transport::SMTP
   is a Mail::Transport::Send
   is a Mail::Transport
   is a Mail::Reporter

=head1 SYNOPSIS

 my $sender = Mail::Transport::SMTP->new(...);
 $sender->send($message);

 $message->send(via => 'smtp');

=head1 DESCRIPTION

This module implements transport of C<Mail::Message> objects by negotiating
to the destination host directly by using the SMTP protocol, without help of
C<sendmail>, C<mail>, or other programs on the local host.

B<warning:> you may need to install Net::SMTPS, to get TLS support.

Extends L<"DESCRIPTION" in Mail::Transport::Send|Mail::Transport::Send/"DESCRIPTION">.
 
=head1 METHODS

Extends L<"METHODS" in Mail::Transport::Send|Mail::Transport::Send/"METHODS">.
 
=head2 Constructors

Extends L<"Constructors" in Mail::Transport::Send|Mail::Transport::Send/"Constructors">.
 
=over 4

=item Mail::Transport::SMTP-E<gt>B<new>(%options)

 -Option       --Defined in     --Default
  esmtp_options                   {}
  executable     Mail::Transport  undef
  from                            undef
  helo                            <from Net::Config>
  hostname       Mail::Transport  <from Net::Config>
  interval       Mail::Transport  30
  log            Mail::Reporter   'WARNINGS'
  password                        undef
  port           Mail::Transport  25
  proxy          Mail::Transport  <from Net::Config>
  retry          Mail::Transport  <false>
  smtp_debug                      <false>
  timeout                         120
  trace          Mail::Reporter   'WARNINGS'
  username                        undef
  via            Mail::Transport  'smtp'

=over 2

=item esmtp_options => HASH

[2.116] ESMTP options to pass to Net::SMTP.  See the L<Net::SMTP>
documentation for full details. Options can also be passed at send time.
For example: C<< { XVERP => 1 } >>

=item executable => FILENAME

=item from => ADDRESS

Allows a default sender address to be specified globally.
See L<trySend()|Mail::Transport::SMTP/"METHODS"> for full details.

=item helo => HOST

The fully qualified name of the sender's host (your system) which
is used for the greeting message to the receiver.  If not specified,
Net::Config or else Net::Domain are questioned to find it.
When even these do not supply a valid name, the name of the domain in the
C<From> line of the message is assumed.

=item hostname => HOSTNAME|ARRAY

=item interval => SECONDS

=item log => LEVEL

=item password => STRING

The password to be used with the new(username) to log in to the remote
server.

=item port => INTEGER

=item proxy => PATH

=item retry => NUMBER|undef

=item smtp_debug => BOOLEAN

Simulate transmission: the SMTP protocol output will be sent to your
screen.

=item timeout => SECONDS

The number of seconds to wait for a valid response from the server before
failing.

=item trace => LEVEL

=item username => STRING

Use SASL authentication to contact the remote SMTP server (RFC2554).
This username in combination with new(password) is passed as arguments
to Net::SMTP method auth.  Other forms of authentication are not
supported by Net::SMTP.  The C<username> can also be specified as an
Authen::SASL object.

=item via => CLASS|NAME

=back

=back

=head2 Sending mail

Extends L<"Sending mail" in Mail::Transport::Send|Mail::Transport::Send/"Sending mail">.
 
=over 4

=item $obj-E<gt>B<destinations>( $message, [$address|ARRAY] )

Inherited, see L<Mail::Transport::Send/"Sending mail">

=item $obj-E<gt>B<putContent>($message, $fh, %options)

Inherited, see L<Mail::Transport::Send/"Sending mail">

=item $obj-E<gt>B<send>($message, %options)

Inherited, see L<Mail::Transport::Send/"Sending mail">

=item $obj-E<gt>B<trySend>($message, %options)

Try to send the $message once.   This may fail, in which case this
method will return C<false>.  In list context, the reason for failure
can be caught: in list context C<trySend> will return a list of
five values:

 (success, error code, error text, error location, quit success)

Success and quit success are booleans.  The error code and -text are
protocol specific codes and texts.  The location tells where the
problem occurred.

 -Option       --Default
  esmtp_options  {}
  from           < >
  to             []

=over 2

=item esmtp_options => HASH

Additional or overridden EMSTP options. See L<new(esmtp_options)|Mail::Transport::SMTP/"METHODS">

=item from => ADDRESS

Your own identification.  This may be fake.  If not specified, it is
taken from L<Mail::Message::sender()|Mail::Message/"The header">, which means the content of the
C<Sender> field of the message or the first address of the C<From>
field.  This defaults to "E<lt> E<gt>", which represents "no address".

=item to => ADDRESS|[ADDRESSES]

Alternative destinations.  If not specified, the C<To>, C<Cc> and C<Bcc>
fields of the header are used.  An address is a string or a Mail::Address
object.

=back

=back

=head2 Server connection

Extends L<"Server connection" in Mail::Transport::Send|Mail::Transport::Send/"Server connection">.
 
=over 4

=item $obj-E<gt>B<contactAnyServer>()

Creates the connection to the SMTP server.  When more than one hostname
was specified, the first which accepts a connection is taken.  An
IO::Socket::INET object is returned.

=item $obj-E<gt>B<findBinary>( $name, [@directories] )

Inherited, see L<Mail::Transport/"Server connection">

=item $obj-E<gt>B<remoteHost>()

Inherited, see L<Mail::Transport/"Server connection">

=item $obj-E<gt>B<retry>()

Inherited, see L<Mail::Transport/"Server connection">

=item $obj-E<gt>B<tryConnectTo>($host, %options)

Try to establish a connection to deliver SMTP to the specified $host.  The
%options are passed to the C<new> method of Net::SMTP.

=back

=head2 Error handling

Extends L<"Error handling" in Mail::Transport::Send|Mail::Transport::Send/"Error handling">.
 
=over 4

=item $obj-E<gt>B<AUTOLOAD>()

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<addReport>($object)

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<defaultTrace>( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )

=item Mail::Transport::SMTP-E<gt>B<defaultTrace>( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<errors>()

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<log>( [$level, [$strings]] )

=item Mail::Transport::SMTP-E<gt>B<log>( [$level, [$strings]] )

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<logPriority>($level)

=item Mail::Transport::SMTP-E<gt>B<logPriority>($level)

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<logSettings>()

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<notImplemented>()

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<report>( [$level] )

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<reportAll>( [$level] )

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<trace>( [$level] )

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<warnings>()

Inherited, see L<Mail::Reporter/"Error handling">

=back

=head2 Cleanup

Extends L<"Cleanup" in Mail::Transport::Send|Mail::Transport::Send/"Cleanup">.
 
=over 4

=item $obj-E<gt>B<DESTROY>()

Inherited, see L<Mail::Reporter/"Cleanup">

=back

=head1 DIAGNOSTICS

=over 4

=item Warning: Message has no destination

It was not possible to figure-out where the message is intended to go
to.

=item Notice: No addresses found to send the message to, no connection made

=item Error: Package $package does not implement $method.

Fatal error: the specific package (or one of its superclasses) does not
implement this method where it should. This message means that some other
related classes do implement this method however the class at hand does
not.  Probably you should investigate this and probably inform the author
of the package.

=item Warning: Resent group does not specify a destination

The message which is sent is the result of a bounce (for instance
created with L<Mail::Message::bounce()|Mail::Message::Construct::Bounce/"Constructing a message">), and therefore starts with a
C<Received> header field.  With the C<bounce>, the new destination(s)
of the message are given, which should be included as C<Resent-To>,
C<Resent-Cc>, and C<Resent-Bcc>.

The C<To>, C<Cc>, and C<Bcc> header information is only used if no
C<Received> was found.  That seems to be the best explanation of the RFC.

As alternative, you may also specify the C<to> option to some of the senders
(for instance L<Mail::Transport::SMTP::send(to)|Mail::Transport::Send/"Sending mail"> to overrule any information
found in the message itself about the destination.

=back

=head1 SEE ALSO

This module is part of Mail-Box distribution version 2.120,
built on September 21, 2016. Website: F<http://perl.overmeer.net/mailbox/>

=head1 LICENSE

Copyrights 2001-2016 by [Mark Overmeer]. For other contributors see ChangeLog.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See F<http://www.perl.com/perl/misc/Artistic.html>

