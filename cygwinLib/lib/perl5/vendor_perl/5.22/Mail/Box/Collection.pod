=encoding utf8

=head1 NAME

Mail::Box::Collection - a collection of subfolders

=head1 INHERITANCE

 Mail::Box::Collection
   is a User::Identity::Collection
   is a User::Identity::Item

 Mail::Box::Collection
   is a Mail::Reporter

=head1 SYNOPSIS

=head1 DESCRIPTION

The L<Mail::Box::Collection|Mail::Box::Collection> object maintains a set L<Mail::Box::Identity|Mail::Box::Identity>
objects, each describing a the location of a single mailbox (folder).  The
collection is used by the L<Mail::Box::Manage::User|Mail::Box::Manage::User> object to administer
the folders of a single user, even if those folders are closed.

Extends L<"DESCRIPTION" in Mail::Reporter|Mail::Reporter/"DESCRIPTION">.
 
Extends L<"DESCRIPTION" in User::Identity::Collection|User::Identity::Collection/"DESCRIPTION">.
 
=head1 OVERLOADED

Extends L<"OVERLOADED" in User::Identity::Collection|User::Identity::Collection/"OVERLOADED">.
 
=over 4

=item overload: B<@{}>

Inherited, see L<User::Identity::Collection/"OVERLOADED">

=item overload: B<stringification>

Inherited, see L<User::Identity::Collection/"OVERLOADED">

=back

=head1 METHODS

Extends L<"METHODS" in Mail::Reporter|Mail::Reporter/"METHODS">.
 
Extends L<"METHODS" in User::Identity::Collection|User::Identity::Collection/"METHODS">.
 
=head2 Constructors

Extends L<"Constructors" in Mail::Reporter|Mail::Reporter/"Constructors">.
 
Extends L<"Constructors" in User::Identity::Collection|User::Identity::Collection/"Constructors">.
 
=over 4

=item Mail::Box::Collection-E<gt>B<new>( [$name], %options )

 -Option     --Defined in                --Default
  description  User::Identity::Item        undef
  folder_type                              <from parent>
  item_type    User::Identity::Collection  Mail::Box::Identity
  log          Mail::Reporter              'WARNINGS'
  manager                                  <from parent>
  name         User::Identity::Item        'folders'
  parent       User::Identity::Item        undef
  roles        User::Identity::Collection  undef
  trace        Mail::Reporter              'WARNINGS'

=over 2

=item description => STRING

=item folder_type => CLASS

=item item_type => CLASS

=item log => LEVEL

=item manager => OBJECT

An L<Mail::Box::Manager|Mail::Box::Manager> OBJECT (could be a L<Mail::Box::Manage::User|Mail::Box::Manage::User>).

=item name => STRING

=item parent => OBJECT

=item roles => ROLE|ARRAY

=item trace => LEVEL

=back

=back

=head2 Error handling

Extends L<"Error handling" in Mail::Reporter|Mail::Reporter/"Error handling">.
 
=over 4

=item $obj-E<gt>B<AUTOLOAD>()

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<addReport>($object)

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<defaultTrace>( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )

=item Mail::Box::Collection-E<gt>B<defaultTrace>( [$level]|[$loglevel, $tracelevel]|[$level, $callback] )

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<errors>()

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<log>( [$level, [$strings]] )

=item Mail::Box::Collection-E<gt>B<log>( [$level, [$strings]] )

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<logPriority>($level)

=item Mail::Box::Collection-E<gt>B<logPriority>($level)

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<logSettings>()

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<notImplemented>()

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<report>( [$level] )

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<reportAll>( [$level] )

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<trace>( [$level] )

Inherited, see L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<warnings>()

Inherited, see L<Mail::Reporter/"Error handling">

=back

=head2 Cleanup

Extends L<"Cleanup" in Mail::Reporter|Mail::Reporter/"Cleanup">.
 
=over 4

=item $obj-E<gt>B<DESTROY>()

Inherited, see L<Mail::Reporter/"Cleanup">

=back

=head2 Attributes

Extends L<"Attributes" in User::Identity::Collection|User::Identity::Collection/"Attributes">.
 
=over 4

=item $obj-E<gt>B<description>()

Inherited, see L<User::Identity::Item/"Attributes">

=item $obj-E<gt>B<folderType>( [$folderclass] )

Returns the type of folder (on this location).  When specified, then
$folderclass must be a L<Mail::Box|Mail::Box> extension.

=item $obj-E<gt>B<itemType>()

Inherited, see L<User::Identity::Collection/"Attributes">

=item $obj-E<gt>B<manager>()

The L<Mail::Box::Manager|Mail::Box::Manager> (usually a L<Mail::Box::Manage::User|Mail::Box::Manage::User> object),
which is handling the opening of folders.

=item $obj-E<gt>B<name>( [NEWNAME] )

Inherited, see L<User::Identity::Item/"Attributes">

=item $obj-E<gt>B<roles>()

Inherited, see L<User::Identity::Collection/"Attributes">

=back

=head2 Collections

Extends L<"Collections" in User::Identity::Collection|User::Identity::Collection/"Collections">.
 
=over 4

=item $obj-E<gt>B<add>(COLLECTION, ROLE)

Inherited, see L<User::Identity::Item/"Collections">

=item $obj-E<gt>B<addCollection>(OBJECT | ([TYPE], OPTIONS))

Inherited, see L<User::Identity::Item/"Collections">

=item $obj-E<gt>B<collection>(NAME)

Inherited, see L<User::Identity::Item/"Collections">

=item $obj-E<gt>B<parent>( [PARENT] )

Inherited, see L<User::Identity::Item/"Collections">

=item $obj-E<gt>B<removeCollection>(OBJECT|NAME)

Inherited, see L<User::Identity::Item/"Collections">

=item $obj-E<gt>B<type>()

=item Mail::Box::Collection-E<gt>B<type>()

Inherited, see L<User::Identity::Item/"Collections">

=item $obj-E<gt>B<user>()

Inherited, see L<User::Identity::Item/"Collections">

=back

=head2 Maintaining roles

Extends L<"Maintaining roles" in User::Identity::Collection|User::Identity::Collection/"Maintaining roles">.
 
=over 4

=item $obj-E<gt>B<addRole>(ROLE| ([NAME],OPTIONS) | ARRAY)

Inherited, see L<User::Identity::Collection/"Maintaining roles">

=item $obj-E<gt>B<removeRole>(ROLE|NAME)

Inherited, see L<User::Identity::Collection/"Maintaining roles">

=item $obj-E<gt>B<renameRole>( <ROLE|OLDNAME>, NEWNAME )

Inherited, see L<User::Identity::Collection/"Maintaining roles">

=item $obj-E<gt>B<sorted>()

Inherited, see L<User::Identity::Collection/"Maintaining roles">

=back

=head2 Searching

Extends L<"Searching" in User::Identity::Collection|User::Identity::Collection/"Searching">.
 
=over 4

=item $obj-E<gt>B<find>(NAME|CODE|undef)

Inherited, see L<User::Identity::Collection/"Searching">

=back

=head1 DIAGNOSTICS

=over 4

=item Error: $object is not a collection.

The first argument is an object, but not of a class which extends
L<User::Identity::Collection|User::Identity::Collection>.

=item Error: Cannot create a $type to add this to my collection.

Some options are specified to create a $type object, which is native to
this collection.  However, for some reason this failed.

=item Error: Cannot load collection module for $type ($class).

Either the specified $type does not exist, or that module named $class returns
compilation errors.  If the type as specified in the warning is not
the name of a package, you specified a nickname which was not defined.
Maybe you forgot the 'require' the package which defines the nickname.

=item Error: Cannot rename $name into $newname: already exists

=item Error: Cannot rename $name into $newname: doesn't exist

=item Error: Creation of a collection via $class failed.

The $class did compile, but it was not possible to create an object
of that class using the options you specified.

=item Error: Don't know what type of collection you want to add.

If you add a collection, it must either by a collection object or a
list of options which can be used to create a collection object.  In
the latter case, the type of collection must be specified.

=item Warning: No collection $name

The collection with $name does not exist and can not be created.

=item Error: Package $package does not implement $method.

Fatal error: the specific package (or one of its superclasses) does not
implement this method where it should. This message means that some other
related classes do implement this method however the class at hand does
not.  Probably you should investigate this and probably inform the author
of the package.

=item Error: Wrong type of role for $collection: requires a $expect but got a $type

Each $collection groups sets of roles of one specific type ($expect).  You
cannot add objects of a different $type.

=back

=head1 SEE ALSO

This module is part of Mail-Box distribution version 2.120,
built on September 21, 2016. Website: F<http://perl.overmeer.net/mailbox/>

=head1 LICENSE

Copyrights 2001-2016 by [Mark Overmeer]. For other contributors see ChangeLog.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See F<http://www.perl.com/perl/misc/Artistic.html>

